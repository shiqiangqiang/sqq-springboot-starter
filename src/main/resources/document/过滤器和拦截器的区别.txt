一、HandlerInterceptor接口三个方法：
    preHandle：在执行具体controller方法之前调用
    postHandle：在方法的返回之前(return)调用
    afterCompletion：方法返回后调用

二、Filter接口三个方法：

    init:容器启动就执行

    doFilter:有请求进行或者响应都会执行(如果不执行chain.doFilter(request, response)，就表示被过滤后，后面就不会执行，直接返回了)

    destory:容器销毁前执行

三、结合上面的控制台输入，有请求进来时，这六个方法的执行顺序应该是：
    Filter#init -> Filter#doFilter -> Interceptor#preHandler ->具体的方法处理 -> Interceptor#postHandle ->Interceptor#afterCompletion
    ->Filter#doFilter -> Filter#destory


四、区别总结
    1.Filter是Servlet容器的，Interceptor是SpringMvc实现的(结合springBoot看)

    2.Filter对所有请求起作用，Intercptor可以设置拦截规则，而且只对经过DispatchServlet的请求起作用。

    3.Filter只能拿到request和response，interceptor可以拿到整个请求上下文，包括request和response。

    4.Filter是基于函数回调，Interceptor是基于反射(AOP思想)

五、何时使用拦截器？何时使用过滤器？
    如果是非spring项目，那么拦截器不能用，只能使用过滤器。
    如果是处理controller前后，既可以使用拦截器也可以使用过滤器。
    如果是处理dispaterServlet前后，只能使用过滤器。

六、spring boot 使用过滤器
    两种方式：
    1、使用spring boot提供的FilterRegistrationBean注册Filter
    2、使用原生servlet注解定义Filter
    两种方式的本质都是一样的，都是去FilterRegistrationBean注册自定义Filter